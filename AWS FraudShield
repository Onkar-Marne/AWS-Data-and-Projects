Project – AWS FraudShield


To build a real-time machine learning model deployment using AWS, you need to set up various AWS services that allow you to train, deploy, and interact with a machine learning model in real-time.  Building a real-time machine learning model deployment for fraud detection in finance involves several steps. Here’s a comprehensive documentative guide for creating this solution using AWS services:

1. Define the Use Case and Prepare Your Data -
•	Define Your Use Case :

•	Problem: Fraud Detection in Financial Transactions

•	Objective: Develop a model to classify financial transactions as either "fraudulent" or "legitimate" in real-time.

•	Model Type: Classification Model (e.g., Random Forest, XGBoost, or a deep learning model)

•	Prepare Your Data :

•	Data Collection: Obtain a dataset with financial transactions. For this example, we will use the "Credit Card Fraud Detection" dataset available from ‘Kaggle’ or similar sources.

•	Data Preprocessing:

•	Clean Data: Handle missing values, normalize numerical features, and encode categorical features.

•	Feature Engineering: Create relevant features for fraud detection (e.g., transaction amount, time, user behavior).

•	Labeling: Label transactions as "fraudulent" or "legitimate".

•	Sample Data Format:

•	CSV format with columns like transaction_id, amount, time, user_id, is_fraud.

•	CSV format :

•	transaction_id,amount,time,user_id,is_fraud
( 1, 100.00, 2024-08-20 10:00:00, 12345,0 )
( 2, 2000.00, 2024-08-20 10:05:00, 12346,1 )

2. Train Your Machine Learning Model –
•	Set Up AWS SageMaker for Model Training :

•	Navigate to SageMaker Console:

•	Go to Amazon SageMaker Console.

•	Create a SageMaker Notebook Instance:

•	Click on "Notebook instances".

•	Click "Create notebook instance".

•	Enter a name (e.g., FraudDetectionNotebook).

•	Choose an instance type (e.g., ml.t2.medium).

•	Attach an IAM role with permissions to access S3 and other necessary services.

•	Click "Create notebook instance".

•	Upload Training Data to S3.

•	Go to Amazon S3 Console:

•	Create a bucket (e.g., fraud-detection-data-bucket).

•	Upload your CSV data file to this bucket.

•	Create a Training Script:

•	Open the notebook instance and create a new Jupyter notebook. 

•	Python Code 

import sagemaker
from sagemaker import get_execution_role
from sagemaker.inputs import TrainingInput
from sagemaker.estimator import Estimator
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
import joblib

# Load data from S3
data_location = 's3://fraud-detection-data-bucket/fraud_data.csv'
df = pd.read_csv(data_location)

# Preprocess the data
X = df.drop(columns=['is_fraud'])
y = df['is_fraud']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Feature scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train the model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)


# Evaluate the model
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

# Save the model
model_file = '/opt/ml/model/fraud_model.joblib'
joblib.dump(model, model_file)

•	Run the Training Job:

•	Execute the notebook cells to train and save your model.

3. Deploy the Model for Real-Time Predictions :
•	Create a Model in SageMaker :

•	Navigate to SageMaker Console:

•	Go to Amazon SageMaker Console.

•	Create a Model:

•	Click on "Models".

•	Click "Create model".

•	Enter a name (e.g., FraudDetectionModel).

•	Choose the "Container image" (e.g., a pre-built container or a custom container with your model).

•	Specify the "Model artifacts" S3 path (the location of fraud_model.joblib).

•	Attach the IAM role with necessary permissions.

•	Click "Create model".

•	Create an Endpoint Configuration:

•	Navigate to SageMaker Console:

•	Go to Amazon SageMaker Console.

•	Create Endpoint Configuration:

•	Click on "Endpoint configurations".

•	Click "Create endpoint configuration".

•	Enter a name (e.g., FraudDetectionEndpointConfig).

•	Add your model to this configuration.

•	Choose an instance type (e.g., ml.m5.large).

•	Click "Create endpoint configuration".

•	Deploy the Model Endpoint :

•	Navigate to SageMaker Console:

•	Go to Amazon SageMaker Console.

•	Create Endpoint:

•	Click on "Endpoints".

•	Click "Create endpoint".

•	Enter a name (e.g., FraudDetectionEndpoint).

•	Choose the endpoint configuration created earlier.

•	Click "Create endpoint".

•	Monitor the endpoint status until it becomes "InService".





4. Interact with the Model Endpoint -
•	Test the Endpoint with AWS SDK :

•	Install Boto3:

•	If not already installed, install Boto3:

•	Bash Code 
pip install boto3
•	Use Boto3 to Invoke the Endpoint:

•	Use the following Python script to send data to the endpoint and receive predictions:

•	Python Code 
import boto3
import json
# Set up the SageMaker runtime client
runtime = boto3.client('sagemaker-runtime')

# Define endpoint name
endpoint_name = 'FraudDetectionEndpoint'

# Prepare input data
input_data = {
    	'amount': 150.00,
    	'time': 2024-08-20 10:00:00,
    	'user_id': 12345,
    	# Add other features as required by your model
}
payload = json.dumps(input_data)


# Invoke the endpoint
response = runtime.invoke_endpoint(
    	EndpointName=endpoint_name,
    	ContentType='application/json',
    	Body=payload
)

# Parse the response
result = json.loads(response['Body'].read().decode())
print(result)

•	Response Example:

•	The response might indicate whether the transaction is fraudulent or legitimate, based on the model's prediction.

5. Monitor and Optimize -
•	Set Up CloudWatch Monitoring

•	Navigate to CloudWatch Console:

•	Go to Amazon CloudWatch Console.

•	Create Alarms:

•	Click "Alarms" and then "Create alarm".

•	Choose metrics related to your SageMaker endpoint (e.g., latency, invocation count).

•	Set thresholds and notifications for monitoring endpoint performance.

•	Optimize the Model

•	Monitor Performance:

•	Analyze metrics from CloudWatch to identify performance issues.

•	Adjust Instance Type:

•	Modify the endpoint configuration if needed to use a different instance type for better performance.

•	Update the Model:

•	Retrain the model with new data or adjusted hyperparameters and redeploy the updated model.

6. Clean Up Resources -
•	Delete SageMaker Endpoint:

•	Go to the SageMaker Console.

•	Select the endpoint and click "Delete".

•	Delete SageMaker Model:

•	Go to the SageMaker Console.

•	Select the model and click "Delete".

•	Delete S3 Buckets:

•	Go to the S3 Console.

•	Delete the buckets used for training data and model artifacts.

•	Delete CloudWatch Alarms:

•	Go to the CloudWatch Console.

•	Delete any alarms you have created.


By following these steps, you will have successfully built and deployed a real-time machine learning model for fraud detection using AWS services. This involves training the model, deploying it for real-time inference, and monitoring its performance to ensure it meets your requirements.

